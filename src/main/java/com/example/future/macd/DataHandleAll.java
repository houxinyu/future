package com.example.future.macd;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.example.future.config.FutureConfig;
import com.example.future.tools.时间工具;

/**
 * 实时行情信息抓取类
 * 
 * @author content
 * @version 1.0 create at 2012-5-8
 */

// @Component
public class DataHandleAll {
	private static final Logger LOGGER = LoggerFactory.getLogger(DataHandleAll.class);

	private FutureConfig config;

	public DataHandleAll(FutureConfig config) {
		this.config = config;
	}

	// public static ArrayList<String> futureAlertMain(){
	// DataHandle2 dataHandle2 = new DataHandle2();
	// dataHandle2.clearHistoryData();
	// dataHandle2.loadHistoryData();
	// dataHandle2.loadTodayKEntity();
	// dataHandle2.caculateMACD();
	// return dataHandle2.caculateAlert();
	//
	// }

	public void clearHistoryData() {
		AlertUtil.getKentityListMap().clear();
	}

	public void loadHistoryData(int min) {
		LOGGER.info("加载历史K线数据...");
		long start = System.currentTimeMillis();
		List<String> alertNameList = config.getAlertList();

		List<String> alertList = new ArrayList<>();
		for (String code : alertNameList) {
			if ("BU0,MA0,RU0,TA0,HC0,RB0,I0,FG0,JM0,J0,ZC0,RM0,M0,A0,P0,Y0,OI0,CF0,SR0,C0,CS0,JD0,PP0,L0,V0,EG0,AP0,SF0,SM0,SP0"
					.indexOf(code) == -1) {
				alertList.add(code);
			}
		}

		LOGGER.info("alertList:" + alertList);

		ArrayList<KEntity> list = new ArrayList<KEntity>();
		for (String urlCodeName : alertList) {
			list = loadHisMinData(urlCodeName, min);
			LOGGER.info((urlCodeName + "5") + "历史数据 size:" + list.size());
			if (list.size() > 0) {
				AlertUtil.putListToMap(list.get(0).getName() + list.get(0).getMin(), delSubList(list, 240));
			}
			LOGGER.info(list.get(0).getName() + list.get(0).getMin() + "历史数据：" + list.size());

		}
		long end = System.currentTimeMillis();
		LOGGER.info("加载历史K线数据完毕。耗时：" + (start - end) / 1000 + "秒");
	}

	public void loadTodayKEntity() {
		LOGGER.info("加载今日K线数据...");
		long start = System.currentTimeMillis();
		List<String> alertList = config.getAlertList();
		LOGGER.info("alertList:" + alertList);

		ArrayList<KEntity> list = new ArrayList<KEntity>();
		for (String urlCodeName : alertList) {
			list = loadHisMinData(urlCodeName, 5);
			if (list.size() > 0) {
				AlertUtil.putListToMap(list.get(0).getName() + list.get(0).getMin(), delSubList(list, 240));
			}
		}
		long end = System.currentTimeMillis();
		LOGGER.info("加载今日K线数据完毕。耗时：" + (start - end) / 1000 + "秒");
	}

	// 一次请求所有
	public void loadTodayKEntityList() {
		LOGGER.info("加载今日K线数据...");
		long start = System.currentTimeMillis();
		List<String> alertList = config.getAlertList();
		LOGGER.info("alertList:" + alertList);

		// String[] crawlList =
		// AlertUtil.抓新浪取历史数据("BU0,MA0,RU0,TA0,HC0,RB0,I0,FG0,JM0,J0,ZC0,RM0,M0,A0,P0,Y0,OI0,CF0,SR0,C0,CS0,JD0,PP0,L0,V0,EG0,AP0,SF0,SM0,SP0",
		// 0).replaceAll("var hq_str_", "").split(";");
		//
		// ArrayList<KEntity> list=new ArrayList<KEntity>();
		// for(String urlCodeName:alertList) {
		// list=loadHisMinData(urlCodeName,0);
		// if(list.size()>0){
		// AlertUtil.putListToMap(list.get(0).getName()+list.get(0).getMin(),
		// delSubList(list,240));
		// }
		// }
		// long end= System.currentTimeMillis();
		// LOGGER.info("加载今日K线数据完毕。耗时：" + (start - end)/1000+"秒");
	}

	public void caculateMACD(int min) {
		// String[] alertList=配置文件.获取配置项("alertList").split(",");
		List<String> alertList = config.getAlertList();
		for (String urlCode : alertList) {
			ArrayList<KEntity> list = AlertUtil.getListFromMap(urlCode + min);
			if (list != null && list.size() != 0) {
				MyMA.setMA(list, 20);
				MyMACD.setMACD(list);
			}
		}
	}

	public ArrayList<String> caculateAlert() {
		// String[] alertList=配置文件.获取配置项("alertList").split(",");
		ArrayList<String> alertCodeList = new ArrayList<>();
		List<String> alertList = config.getAlertList();
		for (String urlCode : alertList) {
			ArrayList<KEntity> list = AlertUtil.getListFromMap(urlCode + 5);
			if (list == null || list.size() == 0) {
				LOGGER.warn(urlCode + "数据不存在！");
				// 发送邮件
			} else {
				KEntity todayEntity = list.get(list.size() - 1);
				KEntity preEntity = list.get(list.size() - 2);
				KEntity ppEntity = list.get(list.size() - 3);
				//
				boolean 绿转 = preEntity.getDea() > 0 && preEntity.getMacd() < ppEntity.getMacd()
						&& preEntity.getMacd() < todayEntity.getMacd() && todayEntity.getMacd() < 0
						&& todayEntity.getClose() > todayEntity.getMA20();
				boolean 红转 = preEntity.getDea() < 0 && preEntity.getMacd() > ppEntity.getMacd()
						&& preEntity.getMacd() > todayEntity.getMacd() && todayEntity.getMacd() > 0
						&& todayEntity.getClose() < todayEntity.getMA20();

				if (绿转 || 红转) {
					LOGGER.info("======================================================================");

					LOGGER.info("品种:" + urlCode + " 出现转折:" + (绿转 ? "绿转" : "红转"));

					LOGGER.info("todayEntity.Dea：" + todayEntity.getDea() + ",ppEntity.macd：" + ppEntity.getMacd() + ","
							+ "preEntity.macd:" + preEntity.getMacd() + ",todayEntity.macd:" + todayEntity.getMacd()
							+ ",todayEntity.close:" + todayEntity.getClose() + ",todayEntity.ma20:"
							+ todayEntity.getMA20());

					alertCodeList.add(urlCode);

					LOGGER.info("======================================================================");
				}

			}
		}

		LOGGER.info("alertCodeList size:" + alertCodeList.size());

		return alertCodeList;
	}

	public ArrayList<String> caculateAlert(int min) {
		// String[] alertList=配置文件.获取配置项("alertList").split(",");
		ArrayList<String> alertCodeList = new ArrayList<>();
		List<String> alertList = config.getAlertList();
		for (String urlCode : alertList) {
			ArrayList<KEntity> list = AlertUtil.getListFromMap(urlCode + min);
			if (list == null || list.size() == 0) {
				LOGGER.warn(urlCode + "数据不存在！");
				// 发送邮件
			} else {
				KEntity todayEntity = list.get(list.size() - 1);
				KEntity preEntity = list.get(list.size() - 2);
				KEntity ppEntity = list.get(list.size() - 3);
				//
				boolean 绿转 = preEntity.getDea() > 0 && preEntity.getMacd() < ppEntity.getMacd()
						&& preEntity.getMacd() < todayEntity.getMacd() && todayEntity.getMacd() < 0;
				boolean 红转 = preEntity.getDea() < 0 && preEntity.getMacd() > ppEntity.getMacd()
						&& preEntity.getMacd() > todayEntity.getMacd() && todayEntity.getMacd() > 0;

				if (绿转 || 红转) {
					LOGGER.info("======================================================================");

					LOGGER.info("品种:" + urlCode + " 出现转折:" + (绿转 ? "绿转" : "") + "," + (红转 ? "红转" : ""));

					LOGGER.info("黄线Dea:" + todayEntity.getDea() + ", 柱子（前，昨，今）：" + ppEntity.getMacd() + ","
							+ preEntity.getTime() + ":" + preEntity.getMacd() + "," + todayEntity.getMacd());

					alertCodeList.add(urlCode);

					LOGGER.info("======================================================================");
				}

			}
		}

		LOGGER.info("alertCodeList size:" + alertCodeList.size());

		return alertCodeList;
	}

	private static ArrayList<KEntity> getDayList(String codeName, int code0) {
		ArrayList<KEntity> dayList = new ArrayList<KEntity>();
		try {
			String UrlCodeName = AlertUtil.getUrlCodeName(codeName);
			if (code0 == 0) {
				UrlCodeName = AlertUtil.获得主力合约代码(codeName);
			}
			String[] data = AlertUtil.抓新浪取历史数据(UrlCodeName, 3600).replace("\"", "").replace("[", "").split(";");
			for (int k = 0; k <= data.length - 1; k++) {
				int r = loadHisData(data[k], codeName, 3600, dayList);
				if (r == 0) {// 无效数据
					break;
				}
			}
		} catch (Exception e) {
			// TODO: handle exception
			LOGGER.error(e.getMessage(), e);
		}

		return dayList;
	}

	public static ArrayList<KEntity> delSubList(ArrayList<KEntity> list, int size) {
		ArrayList<KEntity> listNew = new ArrayList<KEntity>();
		if (list.size() > size) {
			for (int i = list.size() - size; i < list.size(); i++) {
				KEntity tempEntity = list.get(i);
				tempEntity.setPreIndex(listNew.size() - 1);
				listNew.add(tempEntity);
			}
		} else {
			for (int i = 0; i < list.size(); i++) {
				KEntity tempEntity = list.get(i);
				tempEntity.setPreIndex(listNew.size() - 1);
				listNew.add(tempEntity);
			}
		}
		return listNew;
	}

	/**
	 * 
	 * @param urlCodeName
	 * @param min
	 *            3600代表历史日线，0代表当天日线
	 * @return
	 */
	public static ArrayList<KEntity> loadHisMinData(String urlCodeName, int min) {
		ArrayList<KEntity> list = new ArrayList<KEntity>();
		// String codeName=AlertUtil.getCodeName(urlCodeName);
		if (min != 0) {// 处理历史日线数据
			String[] data = AlertUtil.抓新浪取历史数据(urlCodeName, min).replace("\"", "").replace("[", "").split(";");
			// 日线和其他时间顺序不一样
			if (min == 3600) {
				for (int i = 0; i <= data.length - 1; i++) {
					int r = loadHisData(data[i], urlCodeName, min, list);
					if (r == 0) {// 无效数据
						break;
					}
				}
			} else {
				for (int i = data.length - 1; i >= 0; i--) {
					int r = loadHisData(data[i], urlCodeName, min, list);
					if (r == 0) {// 无效数据
						break;
					}
				}
			}

		} else {// 处理当天日线数据
				// varhq_str_M0="豆粕连续,145958,开盘价[index=2],最高价[index=3],最低价[index=4],3178,3153,最新价[index=7],3154,3162,3169,1325,223,1371608,成交量[index=14],连,豆粕,2013-06-28[index=17]";

			list = AlertUtil.getListFromMap(urlCodeName + 3600);

			LOGGER.info((urlCodeName + "3600") + "历史数据：" + (null == list));

			LOGGER.info("历史数据：" + list.size());
			LOGGER.info("今日数据:" + AlertUtil.抓新浪取历史数据(urlCodeName, min));

			String[] data = AlertUtil.抓新浪取历史数据(urlCodeName, min).replace("\"", "").split(",");

			KEntity todayEntity = new KEntity();
			todayEntity.setTime(data[17]);
			todayEntity.setOpen(Double.parseDouble(data[2]));
			todayEntity.setHigh(Double.parseDouble(data[3]));
			todayEntity.setLow(Double.parseDouble(data[4]));
			todayEntity.setClose(Double.parseDouble(data[7]));

			list.add(todayEntity);

		}
		return list;

	}

	// 因为新浪历史数据接口，日线数据和其他时间框架数据的前后顺序不一样，所以遍历一个从前到后
	private static int loadHisDataBack(String data, String name, int min, ArrayList<KEntity> list) {

		String[] infos = data.split(",");
		if (infos[0].length() < 11) {
			infos[0] = infos[0] + " 00:00:00";
		}
		// 如果现在是15:00-00:00，则取日期为今天且时间为15:00:00之前的数据
		// 如果现在是00:00-15:00，则取日期为前一天，且时间为15:00之前的数据
		int hour = 时间工具.获得现在小时();
		String stopTime = 时间工具.获得今日日期() + " 15:00:00";
		if (hour < 15) {
			stopTime = 时间工具.取得前一交易日期() + " 15:00:00";
		} else {
			stopTime = 时间工具.获得今日日期() + " 15:00:00";
		}
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		try {
			Date skipTime = sdf.parse(stopTime);
			// System.out.println("￥￥￥￥￥："+infos[0]);
			Date dataTime = sdf.parse(infos[0]);
			// System.out.println(stopTime+" "+infos[0]);
			if (dataTime.getTime() > skipTime.getTime()) {
				// break;
				// return 0;
			}
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			LOGGER.error(e.getMessage(), e);
		}
		String tp = getTpFromName(name);
		KEntity kEntity = new KEntity();
		kEntity.setTP(tp);
		kEntity.setName(name);
		kEntity.setMin(min);
		kEntity.setTime(infos[0]);
		kEntity.setOpen(Double.parseDouble(infos[1]));
		kEntity.setHigh(Double.parseDouble(infos[2]));
		kEntity.setLow(Double.parseDouble(infos[3]));
		kEntity.setClose(Double.parseDouble(infos[4]));
		kEntity.setPreIndex(list.size() - 1);

		if (min == 15 && infos[0].contains("10:30:00")) {
			// 把10:30:00这根K线去掉
		} else {
			list.add(kEntity);
		}

		return 1;
	}

	public static ArrayList<KEntity> lineListToEnityList(ArrayList<String> list) {
		ArrayList<KEntity> entityList = new ArrayList<KEntity>();
		if (list.size() == 1) {
			entityList.add(lineToEntity(list.get(0)));
		}
		if (list.size() > 1) {
			for (int i = 0; i < list.size(); i++) {
				KEntity kEntity = lineToEntity(list.get(i));
				for (i = i + 1; i < list.size(); i++) {
					KEntity nextEntity = lineToEntity(list.get(i));
					if (kEntity.getTime().substring(0, 16).equals(nextEntity.getTime().substring(0, 16))) {
						kEntity.setClose(nextEntity.getClose());
						if (kEntity.getHigh() < nextEntity.getHigh()) {
							kEntity.setHigh(nextEntity.getHigh());
						}
						if (kEntity.getLow() > nextEntity.getLow()) {
							kEntity.setLow(nextEntity.getLow());
						}
						if (i == list.size() - 1) {
							entityList.add(kEntity);
						}

					} else {
						entityList.add(kEntity);
						kEntity = nextEntity;
					}
				}
			}

		}

		return entityList;
	}

	private static KEntity lineToEntity(String line) {
		KEntity kEntity = new KEntity();
		String[] lineInfos = line.split(",");
		kEntity.setTP(lineInfos[0]);
		kEntity.setName(lineInfos[1]);
		kEntity.setTime(lineInfos[2].substring(0, 19));
		kEntity.setMin(1);// 1分钟K线
		kEntity.setClose(Double.parseDouble(lineInfos[3]));
		kEntity.setOpen(Double.parseDouble(lineInfos[3]));
		kEntity.setHigh(Double.parseDouble(lineInfos[3]));
		kEntity.setLow(Double.parseDouble(lineInfos[3]));
		return kEntity;
	}

	public static String getTpFromName(String name) {
		// RM1701,MA1701,ZC1701,CF1701,FG1701,TA1701,SR1701,OI1701,rb1701,ru1701,bu1612,ag1612,au1612,ni1701,hc1701,m1701,c1701,p1701,i1701,l1701,y1701,j1701,pp1701,jm1701,jd1701,cs1701,a1701

		String tp = "dc";
		if ("rb,ru,bu,ag,au,ni,hc,al,cu,sn,zn".indexOf(name.substring(0, 2)) != -1) {
			tp = "sc";
		} else if ("RM1701,MA1701,ZC1701,CF1701,FG1701,TA1701,SR1701,OI1701".indexOf(name.substring(0, 2)) != -1) {
			tp = "zc";
		}
		return tp;
	}
	
	
	
	/**到晚上23:00的有6根
14:15:00[14:15:00,14:30:00,14:45:00,15:00:00]

11:15:00[11:15:00,11:30:00,13:45:00,14:00:00]

10:00:00[10:15:00,10:30:00,10:45:00,11:00:00]

09:00:00[09:15:00,09:30:00,09:45:00,10:00:00]

22:00:00[22:15:00,22:30:00,22:45:0023:00:00]

21:00:00[21:15:00,21:30:00,21:45:00,22:00:00]
	 * @param args
	 */
	
	/**到晚上23:30分的，有7根，对于这种情况还需要考虑周五没有交易的情况
14:45:00[14:45:00,15:00:00]

13:45:00[13:45:00,14:00:00,14:15:00,14:30:00]

10:45:00[10:45:00,11:00:00,11:15:00,11:30:00]

09:30:00[09:45:00,10:00:00,10:15:00,10:30:00]

23:00:00[23:15:00,23:30:00,09:15:00,09:30:00]

22:00:00[22:15:00,22:30:00,22:45:00,23:00:00]

21:00:00[21:15:00,21:30:00,21:45:00,22:00:00]
	 * @param args
	 */
	public static void mainForBu(String[] args) {
		String bu
		
		bu2006 = bu2006.replace("[[", "[").replace("]]", "]").replace("],[", "];[");

		String[] dataArray = bu2006.replace("\"", "").replace("[", "").split(";");
		
		
		ArrayList<KEntity> list = new ArrayList<KEntity>();
		for (int k = 0; k <= dataArray.length - 1; k++) {
			int r = loadHisData(dataArray[k], "MA2001", 15, list);
			if (r == 0) {// 无效数据
				break;
			}
		}

		// 跳过后面部分k线
		int i = list.size() - 1;
		int j = i;
		for (; i >= 0; i--) {
			if (list.get(i).getTime().contains("09:15:00")) {
				j = i;
				break;
			}
		}

		// 进行半小时合并
		ArrayList<KEntity> halfList = new ArrayList<KEntity>();

		for (; i >= 0; i--) {
			KEntity firstEntity = list.get(i);
			if (i == 0) {
				halfList.add(firstEntity);
				break;
			}
			KEntity secondEntity = list.get(i - 1);
			if (firstEntity.getTime().contains("23:30:00")
					|| firstEntity.getTime().contains("23:00:00") && secondEntity.getTime().contains("09:15:00")) {
				;// 晚上最后一根K线，不需要跟第二天的合并
			} else {
				firstEntity.setOpen(secondEntity.getOpen());
				firstEntity.setHigh(firstEntity.getHigh() > secondEntity.getHigh() ? firstEntity.getHigh()
						: secondEntity.getHigh());
				firstEntity.setMin(
						firstEntity.getMin() < secondEntity.getMin() ? firstEntity.getMin() : secondEntity.getMin());
				firstEntity.setPreIndex(halfList.size() - 1);
				i--;
			}

			try {
				String time = firstEntity.getTime();
				GregorianCalendar gc = new GregorianCalendar();
				gc.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(time));
				if (gc.get(Calendar.HOUR_OF_DAY) <= 15) {
					long tt = gc.getTimeInMillis() - 15 * 1000 * 60;
					gc.setTimeInMillis(tt);
					firstEntity.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(gc.getTime()));
				} else {
					long tt = gc.getTimeInMillis() - 30 * 1000 * 60;
					gc.setTimeInMillis(tt);
					firstEntity.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(gc.getTime()));
				}

			} catch (ParseException e) {
				LOGGER.error(e.getMessage(), e);
			}
			halfList.add(firstEntity);

		}

		System.out.println("=====================半小时=====================");
		for (KEntity k : halfList) {
			System.out.println(k.getTime());
		}
		System.out.println("=====================半小时=====================");
		
		
		// 进行1小时合并
		// 跳过后面部分k线
		i = list.size() - 1;
		for (; i >= 0; i--) {
			if (list.get(i).getTime().contains("21:15:00")) {
				break;
			}
		}

		
		ArrayList<KEntity> hourList = new ArrayList<KEntity>();

		for (; i >= 3; i--) {
			KEntity firstEntity = list.get(i);
			if(firstEntity.getTime().contains("15:00:00")) {
				hourList.add(firstEntity);
				try {
					String time = firstEntity.getTime();
					GregorianCalendar gc = new GregorianCalendar();
					gc.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(time));
					if (gc.get(Calendar.HOUR_OF_DAY) >= 15) {
						long tt = gc.getTimeInMillis() - 15 * 1000 * 60;
						gc.setTimeInMillis(tt);
						firstEntity.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(gc.getTime()));
					} else {
						long tt = gc.getTimeInMillis() - 15 * 1000 * 60;
						gc.setTimeInMillis(tt);
						firstEntity.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(gc.getTime()));
					}

				} catch (ParseException e) {
					LOGGER.error(e.getMessage(), e);
				}
				continue;
			}
			
			KEntity secondEntity = list.get(i - 1);
			KEntity thirdEntity = list.get(i - 2);
			KEntity fourthEntity = list.get(i - 3);
//			if (firstEntity.getTime().contains("23:30:00")
//					|| firstEntity.getTime().contains("23:00:00") && secondEntity.getTime().contains("09:15:00")) {
//				;// 晚上最后一根K线，不需要跟第二天的合并
//			} else {
//
//			}
			
			firstEntity.setOpen(secondEntity.getOpen());
			firstEntity.setHigh(firstEntity.getHigh() > secondEntity.getHigh() ? firstEntity.getHigh()
					: secondEntity.getHigh());
			firstEntity.setMin(
					firstEntity.getMin() < secondEntity.getMin() ? firstEntity.getMin() : secondEntity.getMin());
			firstEntity.setPreIndex(hourList.size() - 1);
			i = i-3;

			try {
				String time = firstEntity.getTime();
				GregorianCalendar gc = new GregorianCalendar();
				gc.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(time));
				if (gc.get(Calendar.HOUR_OF_DAY) >= 15) {
					long tt = gc.getTimeInMillis() - 15 * 1000 * 60;
					gc.setTimeInMillis(tt);
					firstEntity.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(gc.getTime()));
				} else {
					long tt = gc.getTimeInMillis() - 0 * 1000 * 60;
					gc.setTimeInMillis(tt);
					firstEntity.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(gc.getTime()));
				}

			} catch (ParseException e) {
				LOGGER.error(e.getMessage(), e);
			}
			// System.out.println("T1:" + firstEntity.getTime() + " T2" +
			// secondEntity.getTime());
			hourList.add(firstEntity);
		}
		
		//合并最后一根小时K线，由最近几根15分钟线构成
		System.out.println("=====================小时=====================");
		for (KEntity k : hourList) {
			System.out.println(k.getTime());
		}
		System.out.println("=====================小时=====================");
		
		
		
	}

	/**到晚上23:30分的，有7根，对于这种情况还需要考虑周五没有交易的情况
14:45:00[14:45:00,15:00:00]

13:45:00[13:45:00,14:00:00,14:15:00,14:30:00]

10:45:00[10:45:00,11:00:00,11:15:00,11:30:00]

09:30:00[09:45:00,10:00:00,10:15:00,10:30:00]

23:00:00[23:15:00,23:30:00,09:15:00,09:30:00]==============如果前一天晚上无行情，则只有[09:15:00,09:30:00]

22:00:00[22:15:00,22:30:00,22:45:00,23:00:00]

21:00:00[21:15:00,21:30:00,21:45:00,22:00:00]
	 * @param args
	 */
	public static void mainForMa(String[] args) {

		//LOGGER.info(loadHisMinData("ma0", 5) + "");

		String data

		data = data.replace("[[", "[").replace("]]", "]").replace("],[", "];[");

		String[] dataArray = data.replace("\"", "").replace("[", "").split(";");
		// for(String line:dataArray) {
		// LOGGER.info(line);
		// }

		ArrayList<KEntity> list = new ArrayList<KEntity>();
		for (int k = 0; k <= dataArray.length - 1; k++) {
			int r = loadHisData(dataArray[k], "MA2001", 15, list);
			if (r == 0) {// 无效数据
				break;
			}
		}

		// 跳过后面部分k线
		int i = list.size() - 1;
		int j = i;
		for (; i >= 0; i--) {
			if (list.get(i).getTime().contains("09:15:00")) {
				j = i;
				break;
			}
		}

		// 进行半小时合并
		ArrayList<KEntity> halfList = new ArrayList<KEntity>();

		for (; i >= 0; i--) {
			KEntity firstEntity = list.get(i);
			if (i == 0) {
				halfList.add(firstEntity);
				break;
			}
			KEntity secondEntity = list.get(i - 1);
			if (firstEntity.getTime().contains("23:30:00")
					|| firstEntity.getTime().contains("23:00:00") && secondEntity.getTime().contains("09:15:00")) {
				;// 晚上最后一根K线，不需要跟第二天的合并
			} else {
				firstEntity.setOpen(secondEntity.getOpen());
				firstEntity.setHigh(firstEntity.getHigh() > secondEntity.getHigh() ? firstEntity.getHigh()
						: secondEntity.getHigh());
				firstEntity.setMin(
						firstEntity.getMin() < secondEntity.getMin() ? firstEntity.getMin() : secondEntity.getMin());
				firstEntity.setPreIndex(halfList.size() - 1);
				i--;
			}

			try {
				String time = firstEntity.getTime();
				GregorianCalendar gc = new GregorianCalendar();
				gc.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(time));
				if (gc.get(Calendar.HOUR_OF_DAY) <= 15) {
					long tt = gc.getTimeInMillis() - 15 * 1000 * 60;
					gc.setTimeInMillis(tt);
					firstEntity.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(gc.getTime()));
				} else {
					long tt = gc.getTimeInMillis() - 30 * 1000 * 60;
					gc.setTimeInMillis(tt);
					firstEntity.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(gc.getTime()));
				}

			} catch (ParseException e) {
				LOGGER.error(e.getMessage(), e);
			}
			halfList.add(firstEntity);

		}

		System.out.println("=====================半小时=====================");
		for (KEntity k : halfList) {
			System.out.println(k.getTime());
		}
		System.out.println("=====================半小时=====================");

		
		// 进行1小时合并
		// 跳过后面部分k线
		i = list.size() - 1;
		for (; i >= 0; i--) {
			if (list.get(i).getTime().contains("21:15:00")) {
				break;
			}
		}

		
		ArrayList<KEntity> hourList = new ArrayList<KEntity>();

		for (; i >= 3; i--) {
			KEntity firstEntity = list.get(i);
			if(firstEntity.getTime().contains("15:00:00")) {
				hourList.add(firstEntity);
				try {
					String time = firstEntity.getTime();
					GregorianCalendar gc = new GregorianCalendar();
					gc.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(time));
					if (gc.get(Calendar.HOUR_OF_DAY) >= 15) {
						long tt = gc.getTimeInMillis() - 15 * 1000 * 60;
						gc.setTimeInMillis(tt);
						firstEntity.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(gc.getTime()));
					} else {
						long tt = gc.getTimeInMillis() - 15 * 1000 * 60;
						gc.setTimeInMillis(tt);
						firstEntity.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(gc.getTime()));
					}

				} catch (ParseException e) {
					LOGGER.error(e.getMessage(), e);
				}
				continue;
			}
			
			KEntity secondEntity = list.get(i - 1);
			KEntity thirdEntity = list.get(i - 2);
			KEntity fourthEntity = list.get(i - 3);
//			if (firstEntity.getTime().contains("23:30:00")
//					|| firstEntity.getTime().contains("23:00:00") && secondEntity.getTime().contains("09:15:00")) {
//				;// 晚上最后一根K线，不需要跟第二天的合并
//			} else {
//
//			}
			
			firstEntity.setOpen(secondEntity.getOpen());
			firstEntity.setHigh(firstEntity.getHigh() > secondEntity.getHigh() ? firstEntity.getHigh()
					: secondEntity.getHigh());
			firstEntity.setMin(
					firstEntity.getMin() < secondEntity.getMin() ? firstEntity.getMin() : secondEntity.getMin());
			firstEntity.setPreIndex(hourList.size() - 1);
			i = i-3;

			try {
				String time = firstEntity.getTime();
				GregorianCalendar gc = new GregorianCalendar();
				gc.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(time));
				if (gc.get(Calendar.HOUR_OF_DAY) >= 15) {
					long tt = gc.getTimeInMillis() - 15 * 1000 * 60;
					gc.setTimeInMillis(tt);
					firstEntity.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(gc.getTime()));
				} else {
					long tt = gc.getTimeInMillis() - 15 * 1000 * 60;
					gc.setTimeInMillis(tt);
					firstEntity.setTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(gc.getTime()));
				}

			} catch (ParseException e) {
				LOGGER.error(e.getMessage(), e);
			}
			// System.out.println("T1:" + firstEntity.getTime() + " T2" +
			// secondEntity.getTime());
			hourList.add(firstEntity);
		}
		
		//合并最后一根小时K线，由最近几根15分钟线构成
		System.out.println("=====================小时=====================");
		for (KEntity k : hourList) {
			System.out.println(k.getTime());
		}
		System.out.println("=====================小时=====================");

	}
	
	/**到晚上23:00的有6根
14:15:00[14:15:00,14:30:00,14:45:00,15:00:00]

11:15:00[11:15:00,11:30:00,13:45:00,14:00:00]

10:00:00[10:15:00,10:30:00,10:45:00,11:00:00]

09:00:00[09:15:00,09:30:00,09:45:00,10:00:00]

22:00:00[22:15:00,22:30:00,22:45:0023:00:00]

21:00:00[21:15:00,21:30:00,21:45:00,22:00:00]

遇到晚上23:30分的，有7根，对于这种情况还需要考虑周五没有交易的情况
14:45:00[14:45:00,15:00:00]

13:45:00[13:45:00,14:00:00,14:15:00,14:30:00]

10:45:00[10:45:00,11:00:00,11:15:00,11:30:00]

09:30:00[09:45:00,10:00:00,10:15:00,10:30:00]

23:00:00[23:15:00,23:30:00,09:15:00,09:30:00]==============如果前一天晚上无行情，则只有[09:15:00,09:30:00]，且时间设置为前一天

22:00:00[22:15:00,22:30:00,22:45:00,23:00:00]

21:00:00[21:15:00,21:30:00,21:45:00,22:00:00]

算法：
23:00情况
1、遇到21:15，开始合并，每4个合并成一个（合并按照最大、最小、时间、下标几个维度考虑）
2、遇到15:00结束，并开始下一轮
3、遇到只剩不到4个15分钟情况，则直接进行合并
4、每轮合并后时间设置【21:00:00,22:00:00,09:00:00,10:00:00,11:15:00,14:15:00】

23:30情况
1、每一轮遇到21:15情况，开始合并，每4个合并成一个，遇到14:15:00则两个合并（合并按照最大、最小、时间、下标几个维度考虑）
2、如果新的一轮遇到09:15情况，开始2个即合并，其他的4个合并
3、遇到15:00结束，并开始下一轮
4、遇到只剩不到4个15分钟情况，则直接进行合并
5、每轮合并后时间设置【21:00:00,22:00:00,23:00:00,09:30:00,10:45:00,13:45:00,14:45:00】

15:00情况（无夜）
与23:00类似，只不过没有晚上数据
	 * @param args
	 */
	
	


	// 因为新浪历史数据接口，日线数据和其他时间框架数据的前后顺序不一样，所以遍历一个从前到后
	/**
	 * 
	 * @param data
	 * @param name
	 * @param min
	 * @param list
	 * @return
	 */
	private static int loadHisData(String data, String name, int min, ArrayList<KEntity> list) {

		String[] infos = data.split(",");
		if (infos[0].length() < 11) {
			infos[0] = infos[0] + " 00:00:00";
		}
		// 如果现在是15:00-00:00，则取日期为今天且时间为15:00:00之前的数据
		// 如果现在是00:00-15:00，则取日期为前一天，且时间为15:00之前的数据
		int hour = 时间工具.获得现在小时();
		String stopTime = 时间工具.获得今日日期() + " 15:00:00";
		if (hour < 15) {
			stopTime = 时间工具.取得前一交易日期() + " 15:00:00";
		} else {
			stopTime = 时间工具.获得今日日期() + " 15:00:00";
		}
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		try {
			Date skipTime = sdf.parse(stopTime);
			// System.out.println("￥￥￥￥￥："+infos[0]);
			Date dataTime = sdf.parse(infos[0]);
			// System.out.println(stopTime+" "+infos[0]);
			if (dataTime.getTime() > skipTime.getTime()) {
				// break;
				// return 0;
			}
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			LOGGER.error(e.getMessage(), e);
		}
		String tp = getTpFromName(name);
		KEntity kEntity = new KEntity();
		kEntity.setTP(tp);
		kEntity.setName(name);
		kEntity.setMin(min);
		kEntity.setTime(infos[0]);
		kEntity.setOpen(Double.parseDouble(infos[1]));
		kEntity.setHigh(Double.parseDouble(infos[2]));
		kEntity.setLow(Double.parseDouble(infos[3]));
		kEntity.setClose(Double.parseDouble(infos[4]));
		kEntity.setPreIndex(list.size() - 1);
		
		//需判断对应品种是否到23:30
		int type = getType(name);

		if (min == 15 && infos[0].contains("10:30:00")) {
			// 把10:30:00这根K线去掉
		} else if(type == 1 && min == 15 && infos[0].contains("23:15:00")) {
			// 把23:15:00这根去掉
			//因为没有到23:15:00
		} else if(type == 2 && min == 15 && infos[0].contains("23:45:00")) {
			// 把23:45:00这根去掉
			//因为没有到23:45:00
		} else {
			list.add(kEntity);
		}

		return 1;
	}
	
	
	private static final String TYPE0 = "JD0,DF0";
	private static final String TYPE1 = "BU0,I0";
	private static final String TYPE2 = "MA0,M0";
	/**
	 * 
	 * @param codeName
	 * @return 返回类型：0(只在白天交易)、1（交易到23:00）、2（交易到23:30），交易时间
	 */
	public static int getType(String codeName) {
		
		if(TYPE0.contains(codeName.toUpperCase().replaceAll("[0-9]+", "0"))) {
			return 0;
		}else if(TYPE1.contains(codeName.toUpperCase().replaceAll("[0-9]+", "0"))) {
			return 1;
		}
		return 2;
	}
	
	public static ArrayList<KEntity> mergeTohalf() {
		return null;
	}
	
	public static ArrayList<KEntity> mergeToHour(ArrayList<KEntity> fiftenList) {
		ArrayList<KEntity> list = new ArrayList<>();
		if(fiftenList == null || fiftenList.size() ==0) {
			return list;
		}
		String name = fiftenList.get(0).getName();
		int type = getType(name);
		if(type == 0) {
			//1.只有白天
			mergeToHourType0(fiftenList, list);
		} else if (type ==1) {
			//2.到晚上23:00
			mergeToHourType1(fiftenList, list);
		} else {
			//3.到晚上23:30
			mergeToHourType2(fiftenList, list);
		}
		
		return list;
	}
	
	private static  KEntity mergeMuilt(KEntity ... args) {
		KEntity newKEntity = (KEntity) args[0];
		newKEntity.setMin(60);
		for(KEntity k:args) {
			if(newKEntity.getHigh() < k.getHigh()) {
				newKEntity.setHigh(k.getHigh());
			}
			if(newKEntity.getLow() > k.getLow()) {
				newKEntity.setLow(k.getLow());
			}
		}
		newKEntity.setClose(args[args.length-1].getClose());
		return newKEntity;
	}
	
	/**
14:15:00[14:15:00,14:30:00,14:45:00,15:00:00]

11:15:00[11:15:00,11:30:00,13:45:00,14:00:00]

10:00:00[10:15:00,10:30:00,10:45:00,11:00:00]

09:00:00[09:15:00,09:30:00,09:45:00,10:00:00]
	 * @param fiftenList
	 * @param hourList
	 */
	
	private static void mergeToHourType0(ArrayList<KEntity> fiftenList, ArrayList<KEntity> hourList) {
		// 进行1小时合并
		// 跳过后面部分k线
		int i = fiftenList.size() - 1;
		for (; i >= 0; i--) {
			if (fiftenList.get(i).getTime().contains("09:15:00")) {
				break;
			}
		}
		//组装所有历史数据
		for(; i >= 3; i-=4) {
			KEntity newKEntity = mergeMuilt(fiftenList.get(i), fiftenList.get(i-1), fiftenList.get(i-2), fiftenList.get(i-3));
			newKEntity.setPreIndex(hourList.size()-1);
			String time = newKEntity.getTime();
			newKEntity.setTime(time.replace("09:15:00", "09:00:00").replace("10:15:00", "10:00:00").replace("11:15:00", "11:15:00").replace("14:15:00", "14:15:00"));
			hourList.add(newKEntity);
		}
		//组装最近一根
		if(i>0) {
			KEntity[] kArray=new KEntity[i + 1]; 
			for(; i>=0; i--) {
				kArray[i] = fiftenList.get(i);
			}
			KEntity newKEntity = mergeMuilt(kArray);
			String time = newKEntity.getTime();
			newKEntity.setTime(time.replace("09:15:00", "09:00:00").replace("10:15:00", "10:00:00").replace("11:15:00", "11:15:00").replace("14:15:00", "14:15:00"));
			newKEntity.setPreIndex(hourList.size()-1);
			hourList.add(newKEntity);
		}
		
	}
	private static void mergeToHourType1(ArrayList<KEntity> fiftenList, ArrayList<KEntity> hourList) {
		// 进行1小时合并
		// 跳过后面部分k线
		int i = fiftenList.size() - 1;
		for (; i >= 0; i--) {
			if (fiftenList.get(i).getTime().contains("21:15:00")) {
				break;
			}
		}
		
		//组装所有历史数据
		for(; i >= 3; i-=4) {
			KEntity newKEntity = mergeMuilt(fiftenList.get(i), fiftenList.get(i-1), fiftenList.get(i-2), fiftenList.get(i-3));
			newKEntity.setPreIndex(hourList.size()-1);
			String time = newKEntity.getTime();
			newKEntity.setTime(time.replace("09:15:00", "09:00:00").replace("10:15:00", "10:00:00").replace("11:15:00", "11:15:00").replace("14:15:00", "14:15:00").replace("22:15:00", "22:00:00").replace("21:15:00", "21:00:00"));
			hourList.add(newKEntity);
		}
		//组装最近一根
		if(i>0) {
			KEntity[] kArray=new KEntity[i + 1]; 
			for(; i>=0; i--) {
				kArray[i] = fiftenList.get(i);
			}
			KEntity newKEntity = mergeMuilt(kArray);
			String time = newKEntity.getTime();
			newKEntity.setTime(time.replace("09:15:00", "09:00:00").replace("10:15:00", "10:00:00").replace("11:15:00", "11:15:00").replace("14:15:00", "14:15:00").replace("22:15:00", "22:00:00").replace("21:15:00", "21:00:00"));
			newKEntity.setPreIndex(hourList.size()-1);
			hourList.add(newKEntity);
		}
		
		
	}
	
	/**
14:45:00[14:45:00,15:00:00]

13:45:00[13:45:00,14:00:00,14:15:00,14:30:00]

10:45:00[10:45:00,11:00:00,11:15:00,11:30:00]

09:30:00[09:45:00,10:00:00,10:15:00,10:30:00]

23:00:00[23:15:00,23:30:00,09:15:00,09:30:00]==============如果前一天晚上无行情，则只有[09:15:00,09:30:00]，且时间设置为前一天

22:00:00[22:15:00,22:30:00,22:45:00,23:00:00]

21:00:00[21:15:00,21:30:00,21:45:00,22:00:00]
	 * @param fiftenList
	 * @param hourList
	 */
	private static void mergeToHourType2(ArrayList<KEntity> fiftenList, ArrayList<KEntity> hourList) {
		// 进行1小时合并
		// 跳过后面部分k线
		int i = fiftenList.size() - 1;
		for (; i >= 0; i--) {
			if (fiftenList.get(i).getTime().contains("21:15:00")) {
				break;
			}
		}
		
		//组装所有历史数据
		for(; i >= 3; ) {
			KEntity tempEntity = fiftenList.get(i);
			
			if(!tempEntity.getTime().contains("09:15:00") && !tempEntity.getTime().contains("14:45:00")) {
				//23:15:00,23:30:00以及其他情况
				KEntity newKEntity = mergeMuilt(fiftenList.get(i), fiftenList.get(i-1), fiftenList.get(i-2), fiftenList.get(i-3));
				newKEntity.setPreIndex(hourList.size()-1);
				String time = newKEntity.getTime();
				newKEntity.setTime(time.replace("09:45:00", "09:30:00").replace("21:15:00", "21:00:00").replace("22:15:00", "22:00:00").replace("23:15:00", "23:00:00"));
				hourList.add(newKEntity);
				i-=4;
			} else {
				//09:15:00(无夜盘),14:45:00(最后半小时)
				KEntity newKEntity = mergeMuilt(fiftenList.get(i), fiftenList.get(i-1));
				newKEntity.setPreIndex(hourList.size()-1);
				String time = newKEntity.getTime();
				newKEntity.setTime(time.replace("09:45:00", "09:30:00").replace("21:15:00", "21:00:00").replace("22:15:00", "22:00:00").replace("23:15:00", "23:00:00"));
				hourList.add(newKEntity);
				i-=2;
			}
			
		}
		//组装最近一根
		if(i>0) {
			KEntity[] kArray=new KEntity[i + 1]; 
			for(; i>=0; i--) {
				kArray[i] = fiftenList.get(i);
			}
			KEntity newKEntity = mergeMuilt(kArray);
			String time = newKEntity.getTime();
			newKEntity.setTime(time.replace("09:45:00", "09:30:00").replace("21:15:00", "21:00:00").replace("22:15:00", "22:00:00").replace("23:15:00", "23:00:00"));
			newKEntity.setPreIndex(hourList.size()-1);
			hourList.add(newKEntity);
		}
	}
	
	public static void main(String[] args) {
		ArrayList<KEntity> fiftenList = loadHisMinData("BU0", 15);
//		for(KEntity k : fiftenList) {
//			System.out.println(k.getTime());
//		}
		
		ArrayList<KEntity> hourList = mergeToHour(fiftenList);
		
		for(KEntity k : hourList) {
			System.out.println(k.getTime());
		}
		
		
	}

}
